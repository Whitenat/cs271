// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel[0]=address[0], sel[1]=address[1], sel[2]= address[2],a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

   RAM64(in = in, load = a, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outA);
   RAM64(in = in, load = b, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outB);
   RAM64(in = in, load = c, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outC);
   RAM64(in = in, load = d, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outD);
   RAM64(in = in, load = e, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outE);
   RAM64(in = in, load = f, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outF);
   RAM64(in = in, load = g, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outG);
   RAM64(in = in, load = h, address[0] = address[3], address[1] = address[4], address[2] = address[5], address[3] = address[6], address[4] = address[7], address[5] = address[8], out = outH);



    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel[0]=address[0], sel[1]=address[1], sel[2]= address[2], out =out);
}